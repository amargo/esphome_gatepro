# GatePro Boxer Gate Motor - Parameter Reader Example
# This example shows how to use the GateProParamReader component
# to read and display the current parameter settings of your gate

substitutions:
  devicename: "driveway-gate"
  name: Driveway Gate
  # Gate SRC code that must be appended to all commands
  # IMPORTANT: This unique identifier authenticates commands to your specific gate
  # Each gate has its own unique SRC code - you must use your gate's code here
  gate_src: "src=P00287D7\r\n"

esphome:
  name: ${devicename}
  friendly_name: ${name}
  project:
    name: esphome.web
    version: dev  

esp32:
  board: wemos_d1_mini32

# Include base configuration if you have one
<<: !include .base.yaml

# IMPORTANT: Disable UART logging for proper operation
logger:
  baud_rate: 0
  # level: DEBUG  # Uncomment for debugging

# Web interface
web_server:
  version: 3

captive_portal:

# External components configuration
external_components:
  - source:
      type: git
      url: https://github.com/amargo/esphome_gatepro_external_components
      ref: main
    components: [ gatepro ]
    refresh: 0s

# Required components
api:
esphome:
  on_boot:
    priority: -100
    then:
      - delay: 5s
      - uart.write: "RP,2:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,4:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,5:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,6:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,7:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,8:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,A:;${gate_src}"
      - delay: 1s
      - uart.write: "RP,H:;${gate_src}"

# UART configuration - critical for proper communication
uart:
  baud_rate: 9600
  tx_pin: GPIO1  # Connect to WHITE wire
  rx_pin: GPIO3  # Connect to BLUE wire
  debug:
    direction: BOTH
    dummy_receiver: false
    sequence:
      - lambda: |-
          UARTDebug::log_string(direction, bytes);

# Gate cover component
cover:
  - platform: gatepro
    name: "${name}"
    device_class: gate
    update_interval: 0.5s

# Parameter reader component
gatepro:
  # Define text sensors for each parameter group
  auto_close:
    name: "Auto Close Setting"
    entity_category: "diagnostic"
  op_speed:
    name: "Operating Speed"
    entity_category: "diagnostic"
  decel_start:
    name: "Deceleration Start Point"
    entity_category: "diagnostic"
  decel_speed:
    name: "Deceleration Speed"
    entity_category: "diagnostic"
  torque_sense:
    name: "Torque Sensing"
    entity_category: "diagnostic"
  pedestrian:
    name: "Pedestrian Mode Duration"
    entity_category: "diagnostic"
  torque_reaction:
    name: "Torque Reaction Mode"
    entity_category: "diagnostic"
  infra_beam:
    name: "Infrared Beam Setting"
    entity_category: "diagnostic"

# Control buttons
button:
  # System buttons
  - platform: restart
    name: "Reboot"
    id: reboot_btn
    entity_category: "diagnostic"
    
  # Basic operation
  - platform: uart
    name: "Gate Open"
    data: "FULL OPEN;${gate_src}"
    entity_category: "diagnostic"
  - platform: uart
    name: "Gate Close"
    data: "FULL CLOSE;${gate_src}"
    entity_category: "diagnostic"
  - platform: uart
    name: "Gate Stop"
    data: "RS;${gate_src}"
    entity_category: diagnostic

  # Parameter reading buttons
  - platform: uart
    name: "Read Auto-close (2)"
    data: "RP,2:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Speed (4)"
    data: "RP,4:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Decel Start (5)"
    data: "RP,5:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Decel Speed (6)"
    data: "RP,6:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Torque Sense (7)"
    data: "RP,7:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Pedestrian (8)"
    data: "RP,8:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Torque Reaction (A)"
    data: "RP,A:;${gate_src}"
    entity_category: diagnostic
  - platform: uart
    name: "Read Infra Beam (H)"
    data: "RP,H:;${gate_src}"
    entity_category: diagnostic

  # Full parameter examples with complete array
  # These are the correct way to set parameters without losing other settings
  - platform: uart
    name: "WriteSpeed 1"
    data: "WP,1:1,0,0,1,2,2,0,0,0,3,0,0,3,0,0,0,0;${gate_src}"
    entity_category: "diagnostic"
  - platform: uart
    name: "WriteSpeed 4"
    data: "WP,1:1,0,0,4,2,2,0,0,0,3,0,0,3,0,0,0,0;${gate_src}"
    entity_category: "diagnostic"
  - platform: uart
    name: "PermaLock ON"
    data: "WP,1:1,0,0,4,2,2,0,0,0,3,0,0,3,0,0,0,1;${gate_src}"
    entity_category: "diagnostic"
  - platform: uart
    name: "PermaLock OFF"
    data: "WP,1:1,0,0,4,2,2,0,0,0,3,0,0,3,0,0,0,0;${gate_src}"
    entity_category: "diagnostic"

# Diagnostic sensors
sensor:
  - platform: wifi_signal
    name: "WiFi Signal dB sensor"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
  - platform: uptime
    type: seconds
    name: "Uptime sensor"
    id: uptime_sensor
    update_interval: 60s
    entity_category: "diagnostic"

text_sensor:
  - platform: version
    name: "ESPHome Version"
    id: esphome_version
    entity_category: "diagnostic"

# Automation to read all parameters on boot is now handled by esphome.on_boot above
